{"version":3,"sources":["components/Navbar.js","components/Landing.js","components/UserFunctions.js","components/Login.js","components/Register.js","components/DoctorRegister.js","components/Cashier.js","components/Patient.js","components/PatientBookings.js","components/doctorviewreports.js","components/DoctorAppointments.js","components/UploadMedicalHistory.js","App.js","serviceWorker.js","index.js"],"names":["Landing","e","preventDefault","localStorage","removeItem","this","props","history","push","loginRegLink","className","to","doctor","patient","cashier","userLink","href","onClick","logOut","bind","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","usertoken","facebookresponeemail","role","Component","withRouter","register","newUser","a","axios","post","first_name","last_name","email","password","response","data","insertappointmentinfo","appointmentdetails","PatientID","DoctorID","AppointmentDate","date","AppointmentTime","time","Consent","consent","console","log","alert","sendmail","DoctorEmail","PatientEmail","DoctorName","insertdoctorprofile","doctorprofiledetails","DrID","Degree","Specialization","YearOfExperience","Address","Contact","Fee","Gender","login","user","userid","Password","setItem","token1","Role","ID","returnallspecialization","get","returnallspecificdoctor","specialization","params","returnallspecificdoctordetails","patientbookingdetails","doctorappointments","patientchecked","BookingID","Login","onChange","setState","target","name","value","onSubmit","state","then","res","errors","style","textAlign","noValidate","htmlFor","placeholder","Register","onInputChange","event","defaultValue","DoctorRegister","docProfile","status","Cashier","patientID","Patient","onInputChangeconsent","specialization_selected","doctor_name","catch","err","handleChange","startDate","onInputChangeDoctorName","doctor_id_selected","doctor_name_selected","options","selectedIndex","text","doctor_details","toDateString","emaildetails","Email","Date","map","key","Name","border","padding","VisitingHours","selected","PatientBooking","bookingdetails","class","boxShadow","marginRight","marginBottom","Concent","Doctorviewreports","location","DoctorAppointment","onclick","window","reload","doctorappointment","marginTop","PatientName","PatientChecked","pathname","config","bucketName","region","accessKeyId","secretAccessKey","UploadMedicalHistory","onChangeHandler","selectedFile","files","onClickHandler","S3uplload","uploadFile","FileName","FileDownloadLink","error","message","App","Navbar","exact","path","component","UploadPatientHistory","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8d67bc8c.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport \"./sh.css\"\r\nclass Landing extends Component {\r\n  logOut(e) {\r\n    e.preventDefault();\r\n    localStorage.removeItem(\"usertoken\");\r\n    localStorage.removeItem(\"logintype\");\r\n    localStorage.removeItem(\"facebookresponeemail\");\r\n    localStorage.removeItem(\"facebookresponename\");\r\n    localStorage.removeItem(\"email\");\r\n    localStorage.removeItem(\"role\");\r\n    this.props.history.push(`/`);\r\n  }\r\n\r\n  render() {\r\n    const loginRegLink = (\r\n      <ul className=\"navbar-nav\">\r\n        <li className=\"nav-item\">\r\n          <Link to=\"/login\" className=\"nav-link\">\r\n            Login\r\n          </Link>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <Link to=\"/register\" className=\"nav-link\">\r\n            Register\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    );\r\n    const doctor = (\r\n      <ul className=\"navbar-nav\">\r\n        <li className=\"nav-item\">\r\n          <Link to=\"/doctorregister\" className=\"nav-link\">\r\n            Doctor\r\n          </Link>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <Link to=\"/doctorappointments\" className=\"nav-link\">\r\n            Upcoming Appointments\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    );\r\n    const patient = (\r\n      <ul className=\"navbar-nav\">\r\n        <li className=\"nav-item\">\r\n          <Link to=\"/patient\" className=\"nav-link\">\r\n            Patient\r\n          </Link>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <Link to=\"/patientbooking\" className=\"nav-link\">\r\n            Booking Details\r\n          </Link>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <Link to=\"/medicalhistory\" className=\"nav-link\">\r\n            Upload Reports\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    );\r\n    const cashier = (\r\n      <ul className=\"navbar-nav\">\r\n        <li className=\"nav-item\">\r\n          <Link to=\"/cashier\" className=\"nav-link\">\r\n          Cashier\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    );\r\n  /*  const adminLink = (\r\n      <ul className=\"navbar-nav\">\r\n        <li className=\"nav-item\">\r\n          <Link to=\"/admin\" className=\"nav-link\">\r\n            Admin\r\n          </Link>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <Link to=\"/dashboard\" className=\"nav-link\">\r\n            Dashboard\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    );\r\n    const userdashboard =(\r\n      <ul className=\"navbar-nav\">\r\n        <li className=\"nav-item\">\r\n          <Link to=\"/userdashboard\" className=\"nav-link\">\r\n            UserDashboard\r\n          </Link>\r\n        </li>               \r\n      </ul>\r\n    );*/\r\n    const userLink = (\r\n      <ul className=\"navbar-nav\">\r\n        <li className=\"nav-item\">\r\n          <a href=\"\" onClick={this.logOut.bind(this)} className=\"nav-link\">\r\n            Logout\r\n          </a>\r\n        </li>\r\n               \r\n      </ul>\r\n    );\r\n\r\n    return (\r\n      <nav className=\"navbar navbar-expand-lg navbar-dark nav_color navcolo rounded\">\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#navbarsExample10\"\r\n          aria-controls=\"navbarsExample10\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\" />\r\n        </button>\r\n\r\n        <div\r\n          className=\"collapse navbar-collapse justify-content-md-center\"\r\n          id=\"navbarsExample10\"\r\n        >\r\n          <ul className=\"navbar-nav\">\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/\" className=\"nav-link\">\r\n                Home\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n          {localStorage.usertoken || localStorage.facebookresponeemail ? userLink : loginRegLink}\r\n          \r\n          {localStorage.role==\"Doctor\" ? doctor : \"\"}\r\n          {localStorage.role==\"Patient\" ? patient : \"\"}\r\n          {localStorage.role==\"Cashier\" ? cashier : \"\"}\r\n          \r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Landing);\r\n","import React, { Component } from \"react\";\r\n\r\nclass Landing extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"jumbotron color_back mt-4\">\r\n          <div className=\"col-sm-8 mx-auto\">\r\n          \r\n            <h4 className=\"text-center\">WELCOME TO</h4>\r\n            <div>\r\n            \r\n            <h1 className=\"text-center name_app\">MedicoConnect</h1>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"jumbotron mt-4\">\r\n          <div className=\"col-sm-8 mx-auto\">\r\n            <p>**NOTE: Short Feature List:</p>\r\n            \r\n            <p className=\"\">1. User Login</p>\r\n            <p className=\"\">2. Admin Login</p>\r\n            <p className=\"\">3. Social login (Facebook)</p>\r\n            <p className=\"\">4. Application performs file Uploading.</p>\r\n            <p className=\"\">5. Application performs file Downloading.</p>\r\n            <p className=\"\">6. Application performs file Deleting.</p>\r\n            <p className=\"\">7. Application performs file Updating.</p>\r\n            <p className=\"\">8. Application allows to upload file only Less than 10MB</p>\r\n           \r\n\r\n\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Landing;\r\n","import axios from \"axios\";\r\n\r\nexport const register = async newUser => {\r\n  const response = await axios\r\n    .post(\"/register\", {\r\n      first_name: newUser.first_name,\r\n      last_name: newUser.last_name,\r\n      email: newUser.email,\r\n      password: newUser.password,\r\n      role:newUser.role\r\n    });\r\n    return response.data;\r\n  \r\n};\r\n\r\nexport const insertappointmentinfo =  async appointmentdetails => {\r\n try {\r\n    const response = await axios\r\n      .post(\"insertappointmentinfo/\", {\r\n        PatientID: appointmentdetails.PatientID,\r\n        DoctorID: appointmentdetails.DoctorID,\r\n        AppointmentDate: appointmentdetails.date,\r\n        AppointmentTime: appointmentdetails.time,\r\n        Consent: appointmentdetails.consent\r\n      });\r\n    return response;\r\n  }\r\n  catch (err) {\r\n    console.log(err);\r\n    alert(err);\r\n  }\r\n // console.log(response);\r\n};\r\n\r\nexport const sendmail =  async appointmentdetails => {\r\n  try {\r\n     const response = await axios\r\n       .post(\"sendmail/\", {\r\n        DoctorEmail: appointmentdetails.DoctorEmail,\r\n        PatientEmail: appointmentdetails.PatientEmail,\r\n        DoctorName:appointmentdetails.DoctorName,\r\n        AppointmentDate: appointmentdetails.date,\r\n        AppointmentTime: appointmentdetails.time\r\n       });\r\n     return response;\r\n   }\r\n   catch (err) {\r\n     console.log(err);\r\n     alert(err);\r\n   }\r\n  // console.log(response);\r\n };\r\n\r\n\r\nexport const insertdoctorprofile =  async doctorprofiledetails => {\r\n  try {\r\n     const response = await axios\r\n       .post(\"doctorprofile/\", {\r\n          DrID:doctorprofiledetails.DrID,\r\n          Degree: doctorprofiledetails.Degree,\r\n          Specialization: doctorprofiledetails.Specialization,\r\n          YearOfExperience: doctorprofiledetails.YearOfExperience,\r\n          Address: doctorprofiledetails.Address,\r\n          Contact: doctorprofiledetails.Contact,\r\n          Fee: doctorprofiledetails.Fee,\r\n          Gender: doctorprofiledetails.Gender\r\n       });\r\n     return response;\r\n   }\r\n   catch (err) {\r\n     console.log(err);\r\n     alert(err);\r\n   }\r\n  // console.log(response);\r\n };\r\n\r\nexport const login = async user => {\r\n  try {\r\n    const response = await axios\r\n      .post(\"register/login\", {\r\n        id:user.userid,\r\n        email: user.email,\r\n        Password: user.password \r\n      });\r\n    console.log('login response', response);\r\n    localStorage.setItem(\"usertoken\", response.data.token1);\r\n    localStorage.setItem(\"email\", user.email);\r\n    localStorage.setItem(\"role\", response.data.user.Role);\r\n    localStorage.setItem(\"ID\", response.data.user.ID);\r\n    return response.data;\r\n  }\r\n  catch (err) {\r\n    //console.log(err);\r\n    alert(err);\r\n  }\r\n};\r\nexport const returnallspecialization = async()  => {\r\n  console.log('In Spcialization for returning all specialization');\r\n  try {\r\n    const response = await axios\r\n      .get(\"returnall/specialization\");\r\n    //console.log('all specialization ', response);\r\n    return response;\r\n  }\r\n  catch (err) {\r\n    console.log(err);\r\n    alert(err);\r\n  }\r\n  // console.log(response);\r\n };\r\n\r\n export const returnallspecificdoctor = async(specialization)  => {\r\n  console.log('In specific doctor for returning names');\r\n  try {\r\n    const response =  axios\r\n      .get(\"returnall/specificdoctor\", {\r\n        params: {\r\n          Specialization: specialization\r\n        }\r\n      });\r\n   // console.log('all docotrs ', response);\r\n    return response;\r\n  }\r\n  catch (err) {\r\n    console.log(err);\r\n    alert(err);\r\n  }\r\n  // console.log(response);\r\n };\r\n\r\n export const returnallspecificdoctordetails = async(id)  => {\r\n  console.log('In specific doctor for returning names');\r\n  try {\r\n    const response =  axios\r\n      .get(\"returnall/specificdoctordetails\", {\r\n        params: {\r\n          ID: id\r\n        }\r\n      });\r\n    console.log('Doctor details ', response);\r\n    return response;\r\n  }\r\n  catch (err) {\r\n    console.log(err);\r\n    alert(err);\r\n  }\r\n  // console.log(response);\r\n };\r\n export const patientbookingdetails = async(id)  => {\r\n  //console.log('In specific doctor for returning names');\r\n  try {\r\n    const response =  axios\r\n      .get(\"returnall/patientbookings\", {\r\n        params: {\r\n          ID: id\r\n        }\r\n      });\r\n    //console.log('Doctor details ', response);\r\n    return response;\r\n  }\r\n  catch (err) {\r\n    console.log(err);\r\n    alert(err);\r\n  }\r\n  // console.log(response);\r\n };\r\n export const doctorappointments = async(id)  => {\r\n  //console.log('In specific doctor for returning names');\r\n  try {\r\n    const response =  axios\r\n      .get(\"returnall/doctorappointment\", {\r\n        params: {\r\n          ID: id\r\n        }\r\n      });\r\n    //console.log('Doctor details ', response);\r\n    return response;\r\n  }\r\n  catch (err) {\r\n    console.log(err);\r\n    alert(err);\r\n  }\r\n  // console.log(response);\r\n };\r\n export const patientchecked =  async (id) => {\r\n  console.log('in updatefile userfunction.js', id);\r\n  try {\r\n     const response = await axios\r\n       .post(\"returnall/updatepatientcheck\", {\r\n         \r\n        BookingID: id\r\n         \r\n       });\r\n      return response;\r\n   }\r\n   catch (err) {\r\n     console.log(err);\r\n     alert(err);\r\n   }\r\n };\r\n\r\n\r\nexport const returnallfiles =  async emailid => {\r\n  console.log('in return all file api', emailid);\r\n  try {\r\n    const response = await axios\r\n      .get(\"returnfiles/\", {\r\n        params: {\r\n          Email_id: emailid\r\n        }\r\n      });\r\n    console.log('all files', response);\r\n    return response.data;\r\n  }\r\n  catch (err) {\r\n    console.log(err);\r\n    alert(err);\r\n  }\r\n  // console.log(response);\r\n };\r\n\r\n export const deletefile =  async key => {\r\n  console.log('in delete all file api key', key);\r\n  try {\r\n     const response = await axios\r\n       .get(\"returnfiles/delete\", {\r\n         params: {\r\n           key: key\r\n         }\r\n       });\r\n     console.log('all files', response);\r\n     return response.data;\r\n   }\r\n   catch (err) {\r\n     console.log(err);\r\n     alert(err);\r\n   }\r\n  // console.log(response);\r\n };\r\n\r\n //deletefileinfor from database\r\n export const deletefilefromdatabase =  async id => {\r\n  console.log('in delete all file api', id);\r\n  try {\r\n     const response = await axios\r\n       .delete(\"returnfiles/deletefromdatabase\", {\r\n         params: {\r\n           id: id\r\n         }\r\n       });\r\n     console.log('Deleted from database', response);\r\n     return response;\r\n   }\r\n   catch (err) {\r\n     console.log(err);\r\n     alert(err);\r\n   }\r\n  // console.log(response);\r\n };\r\n\r\n\r\n \r\n\r\n\r\n\r\n\r\n export const returnAdminfiles =  async () => {\r\n  try {\r\n     const response = await axios\r\n       .get(\"returnfiles/admin\");\r\n     console.log('all admin files', response);\r\n     return response;\r\n   }\r\n   catch (err) {\r\n     console.log(err);\r\n     alert(err);\r\n   }\r\n  // console.log(response);\r\n };\r\n\r\n\r\n \r\n \r\n\r\n ","import React, { Component } from \"react\";\r\nimport { login } from \"./UserFunctions\";\r\n//import Facebook from \"./Facebook\";\r\n\r\nclass Login extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      userid:\"\",\r\n      errors: {}\r\n    };\r\n\r\n    //this.onChange = this.onChange.bind(this);\r\n    //this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  onChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const user = {\r\n      userid:this.state.userid,\r\n      email: this.state.email,\r\n      password: this.state.password\r\n    };\r\n\r\n    login(user).then(res => {\r\n      if (res) {\r\n        if (res.user.Role==\"Doctor\") {\r\n          this.props.history.push(`/doctorregister`);\r\n        } else if(res.user.Role==\"Patient\"){\r\n          this.props.history.push(`/patient`);\r\n        }\r\n        else if(res.user.Role==\"Cashier\"){\r\n          this.props.history.push(`/cashier`);\r\n        }\r\n        else{\r\n          this.props.history.push(`/`);\r\n        }\r\n        \r\n      } else {\r\n        alert(\"please register\");\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6 mt-5 mx-auto\" style={{textAlign:'left'}}>\r\n            <form noValidate onSubmit={this.onSubmit}>\r\n              <h1 className=\"h3 mb-3 font-weight-normal\">Please sign in</h1>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"id\">Login ID</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"userid\"\r\n                  placeholder=\"Enter UserID\"\r\n                  value={this.state.userid}\r\n                  onChange={this.onChange}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"email\">Email address</label>\r\n                <input\r\n                  type=\"email\"\r\n                  className=\"form-control\"\r\n                  name=\"email\"\r\n                  placeholder=\"Enter email\"\r\n                  value={this.state.email}\r\n                  onChange={this.onChange}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"password\">Password</label>\r\n                <input\r\n                  type=\"password\"\r\n                  className=\"form-control\"\r\n                  name=\"password\"\r\n                  placeholder=\"Password\"\r\n                  value={this.state.password}\r\n                  onChange={this.onChange}\r\n                />\r\n              </div>\r\n              <button\r\n                type=\"submit\"\r\n                className=\"btn btn-lg btn-primary btn-block\"\r\n              >\r\n                Sign in\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n\r\n        <div>\r\n         \r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import React, { Component } from \"react\";\r\nimport { register } from \"./UserFunctions\";\r\n\r\nclass Register extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      first_name: \"\",\r\n      last_name: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      role:\"\",\r\n      errors: {}\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n  onInputChange = event => {\r\n    console.log(event.target.value);\r\n    this.setState({\r\n      role: event.target.value\r\n    });\r\n    console.log(this.state.role);\r\n  }\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const newUser = {\r\n      first_name: this.state.first_name,\r\n      last_name: this.state.last_name,\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n      role: this.state.role\r\n    };\r\n    console.log(\"user info \",newUser);\r\n    register(newUser).then(res => {\r\n      alert(\"Please Login with this ID \"+ res);\r\n      this.props.history.push(`/login`);\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6 mt-5 mx-auto\" style={{textAlign:'left'}}>\r\n            <form noValidate onSubmit={this.onSubmit}>\r\n              <h1 className=\"h3 mb-3 font-weight-normal\">Register</h1>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"name\">First name</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"first_name\"\r\n                  placeholder=\"Enter your first name\"\r\n                  value={this.state.first_name}\r\n                  onChange={this.onChange}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"name\">Last name</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"last_name\"\r\n                  placeholder=\"Enter your lastname name\"\r\n                  value={this.state.last_name}\r\n                  onChange={this.onChange}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"email\">Email address</label>\r\n                <input\r\n                  type=\"email\"\r\n                  className=\"form-control\"\r\n                  name=\"email\"\r\n                  placeholder=\"Enter email\"\r\n                  value={this.state.email}\r\n                  onChange={this.onChange}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"password\">Password</label>\r\n                <input\r\n                  type=\"password\"\r\n                  className=\"form-control\"\r\n                  name=\"password\"\r\n                  placeholder=\"Password\"\r\n                  value={this.state.password}\r\n                  onChange={this.onChange}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n              <label htmlFor=\"roles\">Select Role</label>\r\n                    <select className=\"form-control\" id=\"profile\" value={this.state.value} onChange={this.onInputChange} \r\n                         placeholder=\"Enter usertype\">\r\n                        <option value=\"default\" defaultValue>Select</option>  \r\n                        <option value=\"Doctor\">Doctor</option>\r\n                        <option value=\"Patient\">Patient</option>\r\n                        <option value=\"Cashier\">Cashier</option>\r\n                    </select>\r\n                </div>\r\n              <button\r\n                type=\"submit\"\r\n                className=\"btn btn-lg btn-primary btn-block\"\r\n              >\r\n                Register!\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Register;\r\n","import React, { Component } from 'react';\nimport { insertdoctorprofile } from \"./UserFunctions\";\n\nclass DoctorRegister extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            Degree: \"\",\n            Specialization: \"\",\n            YearOfExperience: \"\",\n            Address: \"\",\n            Contact: \"\",\n            Fee:\"\",\n            Gender:\"\",\n            errors: {}\n        };\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n      }\n\n      onChange(e) {\n        this.setState({ [e.target.name]: e.target.value });\n      }\n      onSubmit(e) {\n        e.preventDefault();\n    \n        const docProfile = {\n          DrID:localStorage.ID,\n          Degree: this.state.Degree,\n          Specialization: this.state.Specialization,\n          YearOfExperience: this.state.YearOfExperience,\n          Address: this.state.Address,\n          Contact: this.state.Contact,\n          Fee: this.state.Fee,\n          Gender: this.state.Gender\n        };\n        console.log(\"Doctor info \",docProfile);\n        insertdoctorprofile(docProfile)\n        .then(res =>{\n          \n          if(res.status==200){\n              alert(\"Profile Inserted Successfully\");\n              this.props.history.push(`/`);\n          }\n          else{\n            alert(\"Profile didnotinserted\");\n          }\n        });\n      }\n    render() {\n        return (\n        <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-6 mt-5 mx-auto\" style={{textAlign:'left'}}>\n            <form noValidate onSubmit={this.onSubmit}>\n              <h1 className=\"h3 mb-3 font-weight-normal\">Please fill the form to complete your profile</h1>\n              <div className=\"form-group\">\n                <label htmlFor=\"Degree\">Degree</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"Degree\"\n                  placeholder=\"Enter your Degree\"\n                  value={this.state.Degree}\n                  onChange={this.onChange}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"Specialization\">Specialization</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"Specialization\"\n                  placeholder=\"Enter your Specialization\"\n                  value={this.state.Specialization}\n                  onChange={this.onChange}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"YearOfExperience\">Experience</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"YearOfExperience\"\n                  placeholder=\"Enter total year of Experience\"\n                  value={this.state.YearOfExperience}\n                  onChange={this.onChange}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"Address\">Address</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"Address\"\n                  placeholder=\"Enter clinic Address\"\n                  value={this.state.Address}\n                  onChange={this.onChange}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"Contact\">Contact</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"Contact\"\n                  placeholder=\"Enter Contact number\"\n                  value={this.state.Contact}\n                  onChange={this.onChange}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"Fee\">Fee</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"Fee\"\n                  placeholder=\"Enter consultancy charge\"\n                  value={this.state.Fee}\n                  onChange={this.onChange}\n                />\n              </div>\n              <div className=\"form-group\">\n              <label htmlFor=\"Gender\">Gender</label>\n                    <select className=\"form-control\" name=\"Gender\" value={this.state.value} onChange={this.onChange}>\n                        <option value=\"default\" defaultValue>Select</option>  \n                        <option value=\"F\">Female</option>\n                        <option value=\"M\">Male</option>\n                    </select>\n                </div>\n              <button\n                type=\"submit\"\n                className=\"btn btn-lg btn-primary btn-block\">\n                Upload Profile!\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n        \n        )\n    }\n}\n\nexport default DoctorRegister;","import React, { Component } from 'react'\n\nexport default class Cashier extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            patientID: \"\"\n\n        };\n      }\n    render() {\n        return (\n        <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-6 mt-5 mx-auto\" style={{textAlign:'left'}}>\n            <form noValidate onSubmit={this.onSubmit}>\n              <h1 className=\"h3 mb-3 font-weight-normal\">Manage Patient Payments</h1>\n              <div className=\"form-group\">\n                <label htmlFor=\"Degree\">Degree</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"Degree\"\n                  placeholder=\"Enter your Degree\"\n                  value={this.state.Degree}\n                  onChange={this.onChange}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"Specialization\">Specialization</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"Specialization\"\n                  placeholder=\"Enter your Specialization\"\n                  value={this.state.Specialization}\n                  onChange={this.onChange}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"YearOfExperience\">Experience</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"YearOfExperience\"\n                  placeholder=\"Enter total year of Experience\"\n                  value={this.state.YearOfExperience}\n                  onChange={this.onChange}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"Address\">Address</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"Address\"\n                  placeholder=\"Enter clinic Address\"\n                  value={this.state.Address}\n                  onChange={this.onChange}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"Contact\">Contact</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"Contact\"\n                  placeholder=\"Enter Contact number\"\n                  value={this.state.Contact}\n                  onChange={this.onChange}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"Fee\">Fee</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"Fee\"\n                  placeholder=\"Enter consultancy charge\"\n                  value={this.state.Fee}\n                  onChange={this.onChange}\n                />\n              </div>\n              <div className=\"form-group\">\n              <label htmlFor=\"Gender\">Gender</label>\n                    <select className=\"form-control\" name=\"Gender\" value={this.state.value} onChange={this.onChange}>\n                        <option value=\"default\" defaultValue>Select</option>  \n                        <option value=\"F\">Female</option>\n                        <option value=\"M\">Male</option>\n                    </select>\n                </div>\n              <button\n                type=\"submit\"\n                className=\"btn btn-lg btn-primary btn-block\">\n                Upload Profile!\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n            \n        )\n    }\n}\n","import React, { Component } from \"react\";\r\nimport { returnallspecialization, sendmail } from \"./UserFunctions\";\r\nimport { returnallspecificdoctor } from \"./UserFunctions\";\r\nimport { returnallspecificdoctordetails } from \"./UserFunctions\";\r\nimport { insertappointmentinfo } from \"./UserFunctions\";\r\n//import { sendmail } from \"./UserFunctions\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nclass Patient extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      specialization: [],\r\n      specialization_selected: \"\",\r\n      doctor_name: [],\r\n      doctor_details:[],\r\n      doctor_id_selected: \"\",\r\n      startDate: new Date(),\r\n      time:\"\",\r\n      consent:\"\",\r\n      PatientID:\"\",\r\n      doctor_name_selected:\"\"\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    returnallspecialization()\r\n      .then(res => {\r\n        console.log(\"check \", res.data);\r\n        this.setState({\r\n          specialization: res.data\r\n        });\r\n      })\r\n      .catch(err => {\r\n        alert(err);\r\n      });\r\n  }\r\n  onInputChangeconsent = event =>{\r\n    this.setState({\r\n      consent: event.target.value\r\n    });\r\n  };\r\n  onInputChange = event => {\r\n    this.setState({\r\n      specialization_selected: event.target.value\r\n    });\r\n    \r\n      returnallspecificdoctor(event.target.value)\r\n        .then(res => {\r\n          console.log(\"check \", res.data);\r\n          this.setState({\r\n            doctor_name: res.data\r\n          });\r\n        })\r\n        .catch(err => {\r\n          alert(err);\r\n        });\r\n    };\r\n    handleChange = date => {\r\n      this.setState({\r\n        startDate: date\r\n      });\r\n    };\r\n    onInputChangeDoctorName = event => {\r\n     \r\n      this.setState({\r\n        doctor_id_selected: event.target.value,\r\n        doctor_name_selected:event.target.options[event.target.selectedIndex].text\r\n      });\r\n      \r\n        returnallspecificdoctordetails(event.target.value)\r\n          .then(res => {\r\n            //console.log(\"check \", res.data[0]);\r\n            this.setState({\r\n              doctor_details: res.data[0]\r\n            });\r\n          })\r\n          .catch(err => {\r\n            alert(err);\r\n          });\r\n      };\r\n  onChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    let appointmentdetails = {\r\n      PatientID:localStorage.ID,\r\n      DoctorID:this.state.doctor_id_selected,\r\n      date: this.state.startDate.toDateString(),\r\n      time:this.state.time, \r\n      consent:this.state.consent\r\n    };\r\n    let emaildetails = {\r\n      DoctorEmail:this.state.doctor_details.Email,\r\n      PatientEmail:localStorage.email,\r\n      DoctorName:this.state.doctor_name_selected,\r\n      date: this.state.startDate.toDateString(),\r\n      time:this.state.time\r\n    };\r\n    \r\n    insertappointmentinfo(appointmentdetails)\r\n    .then(res =>{\r\n      \r\n      if(res.status==200){\r\n          alert(\"Appointment Booked\");\r\n          console.log(\"Apoointment mail details\",emaildetails);\r\n          sendmail(emaildetails)\r\n          .then(res =>{\r\n            this.props.history.push(`/patientbooking`);\r\n          })\r\n          .catch(err =>{\r\n            alert(err);\r\n          });\r\n         \r\n      }\r\n      else{\r\n        alert(\"Appointment Server Down\");\r\n      }\r\n    });\r\n    \r\n    console.log(\"user info \", appointmentdetails);\r\n    //register(newUser).then(res => {\r\n    //alert(\"Please Login with this ID \"+ res);\r\n    //  this.props.history.push(`/login`);\r\n    // });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6 mt-5 mx-auto\" style={{ textAlign: \"left\" }}>\r\n            <form noValidate onSubmit={this.onSubmit}>\r\n              <h1 className=\"h3 mb-3 font-weight-normal\">\r\n                Make an appointment of Doctor\r\n              </h1>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"doctorspecialization\">\r\n                  Doctor Specialization\r\n                </label>\r\n                <select\r\n                  className=\"form-control\"\r\n                  id=\"Specializationz\"\r\n                  value={this.state.value}\r\n                  onChange={this.onInputChange}\r\n                  placeholder=\"Select Specialzation\"\r\n                >\r\n                  <option value=\"default\" defaultValue>\r\n                    Select an Option\r\n                  </option>\r\n                  {this.state.specialization.map(response => (\r\n                    <option\r\n                      key={response.Specialization}\r\n                      value={response.Specialization}\r\n                    >\r\n                      {response.Specialization}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"doctorname\">Doctor Name</label>\r\n                <select\r\n                  className=\"form-control\"\r\n                  onChange={this.onInputChangeDoctorName}  \r\n                >\r\n                  <option value=\"default\" defaultValue>\r\n                    Select an Option\r\n                  </option>\r\n                  {this.state.doctor_name.map(response => (\r\n                    <option id={response.Name}\r\n                      name={response.Name}\r\n                      key={response.ID}\r\n                      value={response.ID}\r\n                    >\r\n                      {response.Name}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n              <h3>Complete Doctor Profile</h3>\r\n              <div className=\"form-group\" style={{ border: \"1px solid brown\",padding:\"2%\" }}>\r\n                <div><h6 htmlFor=\"\">Doctor Email :{this.state.doctor_details.Email}</h6></div>\r\n                <div><h6 htmlFor=\"\">Degree :{this.state.doctor_details.Degree}</h6></div>\r\n                <div><h6 htmlFor=\"\">Year of Experience :{this.state.doctor_details.YearOfExperience}</h6></div>\r\n                <div><h6 htmlFor=\"\">Address :{this.state.doctor_details.Address}</h6></div>\r\n                <div><h6 htmlFor=\"\">Contact :{this.state.doctor_details.Contact}</h6></div>\r\n                <div><h6 htmlFor=\"\">Fee :{this.state.doctor_details.Fee}</h6></div>\r\n                <div><h6 htmlFor=\"\">Visiting Hours :{this.state.doctor_details.VisitingHours}</h6></div>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"date\">Select Date :</label>\r\n                  <DatePicker className=\"form-control\" selected={this.state.startDate} onChange={this.handleChange}/>  \r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"date\">Enter Time :</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"time\"\r\n                  placeholder=\"Enter time\"\r\n                  value={this.state.time}\r\n                  onChange={this.onChange}\r\n                /> \r\n              </div>\r\n              \r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"roles\">Consent to allow Doctor to Access Medical History</label>\r\n                <select\r\n                  className=\"form-control\"\r\n                  id=\"access\"\r\n                  value={this.state.value}\r\n                  onChange={this.onInputChangeconsent}\r\n                  placeholder=\"Enter usertype\"\r\n                >\r\n                  <option value=\"default\" defaultValue>\r\n                    Select Consent\r\n                  </option>\r\n                   <option value=\"No\">\r\n                    No\r\n                  </option>\r\n                  \r\n                  <option value=\"Yes\">Yes</option>\r\n                </select>\r\n              </div>\r\n              <button\r\n                type=\"submit\"\r\n                className=\"btn btn-lg btn-primary btn-block\"\r\n              >\r\n                Make an Appointment!\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Patient;\r\n","import React, { Component } from \"react\";\r\nimport { patientbookingdetails } from \"./UserFunctions\";\r\nimport \"./sh.css\"\r\nclass PatientBooking extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      bookingdetails: []\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    let id = localStorage.ID;\r\n    patientbookingdetails(id)\r\n      .then(res => {\r\n        console.log(\"all cards \", res.data);\r\n        this.setState({\r\n          bookingdetails: res.data\r\n        });\r\n      })\r\n      .catch(err => {\r\n        alert(err);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Here are your Booking Details</h1>\r\n        <div class=\"\">\r\n        \r\n          {this.state.bookingdetails.map(response => (\r\n           \r\n           <div\r\n              class=\"card1 col-md-3\"\r\n              style={{\r\n                \r\n                border: \"1px solid brown\",\r\n                boxShadow: \"1px 1px 10px 2px\",\r\n                marginRight:'3%',\r\n                marginBottom:'3%'\r\n              }}\r\n            >\r\n              <div class=\"card-body\">\r\n                <h5 class=\"card-title\">{response.Specialization}</h5>\r\n              </div>\r\n              <ul class=\"list-group list-group-flush\">\r\n                <li class=\"list-group-item\">\r\n                  Doctor Name : {response.DoctorName}\r\n                </li>\r\n                <li class=\"list-group-item\">Address :{response.Address}</li>\r\n                <li class=\"list-group-item\">Contact :{response.Contact}</li>\r\n                <li class=\"list-group-item\">\r\n                  Doctor Gender :{response.Gender}\r\n                </li>\r\n                <li class=\"list-group-item\">\r\n                  Year of Experience :{response.YearOfExperience}\r\n                </li>\r\n                <li class=\"list-group-item\">\r\n                  Appointment Date :{response.AppointmentDate}\r\n                </li>\r\n                <li class=\"list-group-item\">Fee :{response.Fee}</li>\r\n                <li class=\"list-group-item\">Concent :{response.Concent}</li>\r\n              </ul>\r\n            </div>\r\n            \r\n          ))}\r\n          \r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PatientBooking;\r\n","import React, { Component } from 'react'\r\nclass Doctorviewreports extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            data:this.props.location.data\r\n         }\r\n    }\r\n    render() { \r\n       \r\n        return ( <div>\r\n            <div>{this.state.data}</div>\r\n            \r\n        </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Doctorviewreports;","import React, { Component } from 'react'\r\nimport { doctorappointments } from \"./UserFunctions\";\r\nimport { patientchecked } from \"./UserFunctions\";\r\nimport Doctorviewreports from \"./doctorviewreports\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nclass DoctorAppointment extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            doctorappointment:[],\r\n            data:'bro'\r\n         };\r\n    }\r\n\r\n    componentDidMount() {\r\n        let id = localStorage.ID;\r\n        doctorappointments(id)\r\n          .then(res => {\r\n            console.log(\"all cards \", res.data);\r\n            this.setState({\r\n                doctorappointment: res.data\r\n            });\r\n          })\r\n          .catch(err => {\r\n            alert(err);\r\n          });\r\n      }\r\n    onclick=(event)=>{\r\n        //console.log(event.target.id);\r\n        patientchecked(event.target.id)\r\n        .then(res => {\r\n            console.log(\"Pateint checked \", res);\r\n           window.location.reload();\r\n          })\r\n          .catch(err => {\r\n            alert(err);\r\n          });\r\n    }\r\n  \r\n    render() { \r\n      \r\n        return ( \r\n            <div>\r\n              <div style={{marginTop:'2%',marginBottom:'2%'}}>\r\n            <h1>Here are your Upcoming Apointments</h1>\r\n            </div>\r\n            <div class=\"\">\r\n            \r\n              {this.state.doctorappointment.map(response => (\r\n               \r\n               <div\r\n                  class=\"card col-md-3\"\r\n                  style={{\r\n                    \r\n                    border: \"1px solid brown\",\r\n                    boxShadow: \"1px 1px 10px 2px\",\r\n                    marginRight:'3%',\r\n                    marginBottom:'3%'\r\n                  }}\r\n                >\r\n                  \r\n                  <ul class=\"list-group list-group-flush\">\r\n                    <li class=\"list-group-item\">\r\n                      Patient Name : {response.PatientName}\r\n                    </li>\r\n                    <li class=\"list-group-item\">Appointment Date :{response.AppointmentDate}</li>\r\n                    <li class=\"list-group-item\">Appointment Time :{response.AppointmentTime}</li>\r\n                    <li class=\"list-group-item\">\r\n                    Fee :{response.Fee}\r\n                    </li>\r\n                    <li class=\"list-group-item\">\r\n                    Patient Checked :{response.PatientChecked}\r\n                    </li>\r\n                    <li class=\"list-group-item\">\r\n                    <button class=\"btn btn-primary\" id={response.BookingID} onClick={this.onclick}>Patient Checked!!</button>        \r\n                    </li>\r\n                    <li id={response.PatientID} class=\"list-group-item\">\r\n                    \r\n                    {\r\n                      (response.Concent==\"Yes\")?\r\n                      <Link to={{pathname:\"/doctorreportview\",data:response.PatientID}} class=\"btn btn-primary\">\r\n                       Reports\r\n                    </Link>\r\n                    :\"\"\r\n                    }\r\n\r\n\r\n                    \r\n                    \r\n                    \r\n                    \r\n                    \r\n                    \r\n                    </li>\r\n                  </ul>\r\n                  \r\n                 \r\n                </div>\r\n                \r\n              ))}\r\n             \r\n            </div>\r\n          </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default DoctorAppointment;","\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport S3uplload from 'react-s3';\n\n\nconst config = {\n  bucketName:  \"cmpe272medico\",\n  region: \"us-east-2\",\n  accessKeyId: \"AKIAJ7XLPRT2WRZBKHDQ\",\n  secretAccessKey: \"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\"\n}\n\nclass UploadMedicalHistory extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n          selectedFile: null,\n          email: \"\",\n          FileName: \"\",\n          FileDownloadLink: \"\"\n        }\n      }\n\n      onChangeHandler= async event =>{\n          this.setState({\n          selectedFile: event.target.files[0]\n        })\n        console.log(event.target.files[0]);\n      }\n\n      onClickHandler = async event =>  {\n        event.preventDefault();\n        try{\n          S3uplload.uploadFile(this.state.selectedFile, config)\n          .then((data)=>{\n            console.log(data);\n            this.setState({\n              email: localStorage.ID,\n              FileName: data.key,\n              FileDownloadLink: data.location\n            })\n           \n            axios.post('https://puqmcxcpb0.execute-api.us-east-2.amazonaws.com/Prod/uploadfileinfo',this.state)\n            .then(res=>{\n              if(res){\n                alert('File uploaded successfully');\n                window.location.reload();\n              }\n            });\n          })\n        }catch(error){\n          console.log(error.message);\n          alert(error);\n        }\n    }\n\n    render() {\n        return (\n        <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-8 mt-5 mx-auto\" style={{textAlign:'left'}}>\n          <h1 className=\"h3 mb-3 font-weight-normal\">Please upload your medical history in .png/.jpg format</h1> \n          </div>\n          <div className=\"col-md-4.5 mt-4 mx-auto\" style={{textAlign:'left'}}>\n            <form noValidate onSubmit={this.onSubmit}>\n              <label>Upload your file</label><br />\n                <input type=\"file\" name=\"file\"\n                className=\"btn btn-lg btn-primary btn-block\" onChange={this.onChangeHandler}/>\n                <button type=\"submit\"\n                className=\"btn btn-lg btn-primary btn-block\" onClick={this.onClickHandler}>Upload File</button>\n            </form>\n          </div>\n        </div>\n      </div>\n        \n        )\n    }\n}\n\nexport default UploadMedicalHistory;","\nimport React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport './App.css';\n\nimport Navbar from \"./components/Navbar\";\nimport Landing from \"./components/Landing\";\nimport Login from \"./components/Login\";\nimport Register from \"./components/Register\";\nimport DoctorRegister from \"./components/DoctorRegister\";\nimport Cashier from \"./components/Cashier\";\nimport Patient from \"./components/Patient\";\nimport PatientBooking from \"./components/PatientBookings\";\nimport DoctorAppointment from \"./components/DoctorAppointments\";\nimport UploadPatientHistory from \"./components/UploadMedicalHistory\";\nimport Doctorviewreports from \"./components/doctorviewreports\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <Navbar />\n          <Route exact path=\"/\" component={Landing} />\n          <div className=\"container\">\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/doctorregister\" component={DoctorRegister} />\n            <Route exact path=\"/cashier\" component={Cashier} />\n            <Route exact path=\"/patient\" component={Patient} />\n            <Route exact path=\"/patientbooking\" component={PatientBooking} />\n            <Route exact path=\"/doctorappointments\" component={DoctorAppointment} />\n            <Route exact path=\"/medicalhistory\" component={UploadPatientHistory} />\n            <Route exact path=\"/doctorreportview\" component={Doctorviewreports} />\n\n           \n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}