{"version":3,"sources":["Medico.jpg","components/Navbar.js","components/Footer.js","components/UserFunctions.js","components/Landing.js","components/auth/SignInWidget.js","components/auth/Login.js","components/Home.js","components/DoctorRegister.js","components/Register.js","components/Cashier.js","components/Patient.js","components/PatientBookings.js","components/doctorviewreports.js","components/DoctorAppointments.js","components/UploadMedicalHistory.js","components/Chatbbot.js","App.js","serviceWorker.js","aws-exports.js","index.js"],"names":["module","exports","Landing","props","state","isAuthenticated","authState","isLogIn","localStorage","getItem","e","preventDefault","removeItem","setItem","this","authService","logout","setState","console","log","loginLink","to","className","doctor","patient","cashier","navButton","logOut","bind","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","role","href","onClick","Component","withOktaAuth","withRouter","Footer","style","backgroundColor","color","width","position","paddingTop","paddingBottom","textDecoration","register","newUser","a","axios","post","first_name","last_name","email","password","response","data","insertappointmentinfo","appointmentdetails","PatientID","DoctorID","AppointmentDate","date","AppointmentTime","time","Consent","consent","alert","sendmail","DoctorEmail","PatientEmail","DoctorName","insertdoctorprofile","doctorprofiledetails","DrID","Degree","Specialization","YearOfExperience","Address","Contact","Fee","Gender","fetchdoctorprofile","doctorID","get","params","returnUserID","Email","returnallspecialization","returnallspecificdoctor","specialization","returnallspecificdoctordetails","ID","patientbookingdetails","doctorappointments","patientchecked","BookingID","Cashierreturn","feecollected","jwtDecode","require","landingPage","user","getUser","then","res","getIdToken","undefined","decoded","userEmail","catch","err","marginBottom","name","display","src","logo","height","borderRadius","SignInWidget","el","ReactDOM","findDOMNode","widget","OktaSignIn","baseUrl","clientId","authParams","responseType","scope","redirectUri","idps","idpDisplay","i18n","en","renderEl","onSuccess","onError","remove","authenticated","checkAuthentication","status","length","idToken","redirect","sessionToken","session","token","pathname","login","isPending","button","DoctorRegister","errors","onChange","onSubmit","target","value","docProfile","history","push","textAlign","noValidate","htmlFor","placeholder","defaultValue","Cashier","onclick","event","window","location","reload","cashierdata","map","class","marginTop","border","boxShadow","marginRight","PatientName","Patient","onInputChangeconsent","onInputChange","specialization_selected","doctor_name","handleChange","startDate","onInputChangeDoctorName","doctor_id_selected","doctor_name_selected","options","selectedIndex","text","doctor_details","toDateString","emaildetails","Date","key","Name","padding","VisitingHours","selected","PatientBooking","bookingdetails","Concent","Doctorviewreports","Filename","Filedownloadlink","alt","DoctorAppointment","doctorappointment","PatientChecked","configuration","bucketName","AWSConfigObj","config","region","accessKeyId","secretAccessKey","UploadMedicalHistory","onChangeHandler","selectedFile","files","onClickHandler","S3","uploadFile","error","message","onClickHandlerDelete","filename","Chatbbot","myTheme","AmplifyTheme","sectionHeader","margin","ChatBot","title","theme","botName","welcomeMessage","onComplete","voiceEnabled","clearOnComplete","createBrowserHistory","App","onAuthRequired","issuer","origin","pkce","Navbar","exact","path","component","render","LoginCallback","UploadPatientHistory","Boolean","hostname","match","awsmobile","Amplify","configure","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8dd8bd1f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Medico.6425e3b4.jpg\";","import React, { Component } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport \"./sh.css\"\r\nimport { withOktaAuth } from '@okta/okta-react';\r\n\r\nclass Landing extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isAuthenticated: this.props.authState.isAuthenticated,\r\n      isLogIn: localStorage.getItem(\"isLogIn\")\r\n    }\r\n\r\n  }\r\n\r\n  logOut(e) {\r\n    e.preventDefault();\r\n    /*  localStorage.removeItem(\"usertoken\");\r\n     localStorage.removeItem(\"logintype\");\r\n     localStorage.removeItem(\"facebookresponeemail\");\r\n     localStorage.removeItem(\"facebookresponename\");\r\n     localStorage.removeItem(\"email\"); */\r\n    localStorage.removeItem(\"role\");\r\n    localStorage.setItem(\"isLogIn\", 'false');\r\n    this.props.authService.logout();\r\n    this.setState({\r\n      isAuthenticated: false,\r\n      isLogIn : 'false'\r\n    })\r\n    console.log(\"loging out\" + this.props.authState.isAuthenticated);\r\n    //this.props.history.push(`/`);\r\n  }\r\n\r\n  render() {\r\n\r\n    /*  const button = this.state.isLogIn ? <Link className=\"nav-link\" onClick={() => {this.logOut.bind(this)}}>Logout</Link> : <Link className=\"nav-link\" to=\"/login\">Login</Link>; */\r\n\r\n    const loginLink = (<Link to=\"/login\" className=\"nav-link\">\r\n      Login\r\n        </Link>);\r\n\r\n\r\n   /*  const loginRegLink = ( \r\n     ); */\r\n\r\n    const doctor = (\r\n      <ul className=\"navbar-nav\">\r\n        <li className=\"nav-item\">\r\n          <Link to=\"/doctorregister\" className=\"nav-link\">\r\n            Doctor\r\n          </Link>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <Link to=\"/doctorappointments\" className=\"nav-link\">\r\n            Upcoming Appointments\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    );\r\n    const patient = (\r\n      <ul className=\"navbar-nav\">\r\n        <li className=\"nav-item\">\r\n          <Link to=\"/patient\" className=\"nav-link\">\r\n            Patient\r\n          </Link>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <Link to=\"/patientbooking\" className=\"nav-link\">\r\n            Booking Details\r\n          </Link>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <Link to=\"/medicalhistory\" className=\"nav-link\">\r\n            Upload Reports\r\n          </Link>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <Link to=\"/ChatBot\" className=\"nav-link\">\r\n            ChatBot\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    );\r\n    const cashier = (\r\n      <ul className=\"navbar-nav\">\r\n        <li className=\"nav-item\">\r\n          <Link to=\"/cashier\" className=\"nav-link\">\r\n            Cashier\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    );\r\n    /*  const adminLink = (\r\n        <ul className=\"navbar-nav\">\r\n          <li className=\"nav-item\">\r\n            <Link to=\"/admin\" className=\"nav-link\">\r\n              Admin\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link to=\"/dashboard\" className=\"nav-link\">\r\n              Dashboard\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      );\r\n      const userdashboard =(\r\n        <ul className=\"navbar-nav\">\r\n          <li className=\"nav-item\">\r\n            <Link to=\"/userdashboard\" className=\"nav-link\">\r\n              UserDashboard\r\n            </Link>\r\n          </li>               \r\n        </ul>\r\n      );*/\r\n    const userLink = (\r\n      <ul className=\"navbar-nav\">\r\n        <li className=\"nav-item\">\r\n          <a href=\"\" onClick={this.logOut.bind(this)} className=\"nav-link\">\r\n            Logout\r\n          </a>\r\n        </li>\r\n\r\n      </ul>\r\n    );\r\n\r\n    const navButton = (\r\n      <button\r\n        className=\"navbar-toggler\"\r\n        type=\"button\"\r\n        data-toggle=\"collapse\"\r\n        data-target=\"#navbarsExample10\"\r\n        aria-controls=\"navbarsExample10\"\r\n        aria-expanded=\"false\"\r\n        aria-label=\"Toggle navigation\"\r\n      >\r\n        <span className=\"navbar-toggler-icon\" />\r\n      </button>\r\n    );\r\n    /* if(this.state.isLogIn){\r\n      <ul className=\"navbar-nav\">\r\n      <li className=\"nav-item\">\r\n        {loginLink}\r\n      </li>\r\n    </ul>\r\n    } else {\r\n      <ul>\r\n        <li className=\"nav-item\">\r\n          <a href=\"\" onClick={this.logOut.bind(this)} className=\"nav-link\">\r\n            Logout\r\n        </a>\r\n        </li>\r\n      </ul>\r\n    } */\r\n\r\n    return (\r\n      <nav className=\"navbar navbar-expand-lg navbar-dark nav_color navcolo rounded\">\r\n        {navButton}\r\n        <div\r\n          className=\"collapse navbar-collapse justify-content-md-center\"\r\n          id=\"navbarsExample10\"\r\n        >\r\n          <ul className=\"navbar-nav\">\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/\" className=\"nav-link\">\r\n                Home\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n          {/* {localStorage.usertoken || localStorage.facebookresponeemail ? userLink : loginRegLink} */}\r\n          {/* {localStorage.isLogIn ? userLink : loginRegLink} */}\r\n\r\n\r\n          { this.state.isLogIn == 'false'  &&\r\n            <ul className=\"navbar-nav\">\r\n              <li className=\"nav-item\">\r\n                {loginLink}\r\n              </li>\r\n            </ul>\r\n          }\r\n          {localStorage.role == \"Doctor\" ? doctor : \"\"}\r\n          {localStorage.role == \"Patient\" ? patient : \"\"}\r\n          {localStorage.role == \"Cashier\" ? cashier : \"\"}\r\n          {\r\n            this.state.isLogIn == 'true' &&\r\n            <ul className=\"navbar-nav\">\r\n              <li className=\"nav-item\">\r\n                <a href=\"\" onClick={this.logOut.bind(this)} className=\"nav-link\">\r\n                  Logout\r\n            </a>\r\n              </li>\r\n            </ul>\r\n          }\r\n          \r\n\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withOktaAuth(withRouter(Landing));\r\n","import React, { Component } from \"react\";\r\nclass Footer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  }\r\n    }\r\n    render() { \r\n        return ( \r\n        <footer className=\"page-footer font-small blue\" style={{backgroundColor:'brown',color:'white',width:'100%',position:'absolute'}}>\r\n\r\n        <div className=\"text-center\" style={{paddingTop:'0.5%',paddingBottom:'0.5%'}}>© 2019 Copyright:\r\n          <a href=\"https://medicoconnect.xyz\" style={{color:'white',textDecoration:'underline'}}> medicoconnect.xyz</a>\r\n        </div>\r\n       \r\n      \r\n      </footer> );\r\n    }\r\n}\r\n \r\nexport default Footer;","import axios from \"axios\";\r\n\r\nexport const register = async newUser => {\r\n  const response = await axios\r\n    .post(\"/register\", {\r\n      first_name: newUser.first_name,\r\n      last_name: newUser.last_name,\r\n      email: newUser.email,\r\n      password: newUser.password,\r\n      role:newUser.role\r\n    });\r\n    return response.data;\r\n  \r\n};\r\n\r\nexport const insertappointmentinfo =  async appointmentdetails => {\r\n try {\r\n    const response = await axios\r\n      .post(\"insertappointmentinfo/\", {\r\n        PatientID: appointmentdetails.PatientID,\r\n        DoctorID: appointmentdetails.DoctorID,\r\n        AppointmentDate: appointmentdetails.date,\r\n        AppointmentTime: appointmentdetails.time,\r\n        Consent: appointmentdetails.consent\r\n      });\r\n    return response;\r\n  }\r\n  catch (err) {\r\n    console.log(err);\r\n    alert(err);\r\n  }\r\n // console.log(response);\r\n};\r\n\r\nexport const sendmail =  async appointmentdetails => {\r\n  try {\r\n     const response = await axios\r\n       .post(\"sendmail/\", {\r\n        DoctorEmail: appointmentdetails.DoctorEmail,\r\n        PatientEmail: appointmentdetails.PatientEmail,\r\n        DoctorName:appointmentdetails.DoctorName,\r\n        AppointmentDate: appointmentdetails.date,\r\n        AppointmentTime: appointmentdetails.time\r\n       });\r\n     return response;\r\n   }\r\n   catch (err) {\r\n     console.log(err);\r\n     alert(err);\r\n   }\r\n  // console.log(response);\r\n };\r\n\r\n\r\nexport const insertdoctorprofile =  async doctorprofiledetails => {\r\n  try {\r\n     const response = await axios\r\n       .post(\"doctorprofile/\", {\r\n          DrID:doctorprofiledetails.DrID,\r\n          Degree: doctorprofiledetails.Degree,\r\n          Specialization: doctorprofiledetails.Specialization,\r\n          YearOfExperience: doctorprofiledetails.YearOfExperience,\r\n          Address: doctorprofiledetails.Address,\r\n          Contact: doctorprofiledetails.Contact,\r\n          Fee: doctorprofiledetails.Fee,\r\n          Gender: doctorprofiledetails.Gender\r\n       });\r\n     return response;\r\n   }\r\n   catch (err) {\r\n     console.log(err);\r\n     alert(err);\r\n   }\r\n  // console.log(response);\r\n };\r\n\r\n\r\n export const fetchdoctorprofile =  async(doctorID) => {\r\n  try {\r\n     const response =  axios\r\n       .get(\"doctorprofile/doctorInfo\", {\r\n        params: {\r\n          DrID: doctorID\r\n        }\r\n       });\r\n       //console.log(\"Doctor Info\",response)\r\n     return response;\r\n   }\r\n   catch (err) {\r\n     console.log(err);\r\n     alert(err);\r\n   }\r\n  // console.log(response);\r\n };\r\n\r\n\r\nexport const login = async user => {\r\n  try {\r\n    const response = await axios\r\n      .post(\"register/login\", {\r\n        id:user.userid,\r\n        email: user.email,\r\n        Password: user.password \r\n      });\r\n    console.log('login response', response);\r\n    localStorage.setItem(\"usertoken\", response.data.token1);\r\n    localStorage.setItem(\"email\", user.email);\r\n    localStorage.setItem(\"role\", response.data.user.Role);\r\n    localStorage.setItem(\"ID\", response.data.user.ID);\r\n    return response.data;\r\n  }\r\n  catch (err) {\r\n    //console.log(err);\r\n    alert(err);\r\n  }\r\n};\r\n\r\nexport const returnUserID = async(email) => {\r\n  try{\r\n    const response =  axios\r\n      .get(\"returnall/userID\", {\r\n        params: {\r\n          Email: email\r\n        }\r\n      });\r\n      console.log(\"My userID is\", response);\r\n      //localStorage.setItem(\"ID\", re);\r\n      return response;\r\n      \r\n  }\r\n  catch (err){\r\n    console.log(err);\r\n    alert(err);\r\n  }\r\n}\r\n\r\nexport const returnallspecialization = async()  => {\r\n  console.log('In Spcialization for returning all specialization');\r\n  try {\r\n    const response = await axios\r\n      .get(\"returnall/specialization\");\r\n    //console.log('all specialization ', response);\r\n    return response;\r\n  }\r\n  catch (err) {\r\n    console.log(err);\r\n    alert(err);\r\n  }\r\n  // console.log(response);\r\n };\r\n\r\n export const returnallspecificdoctor = async(specialization)  => {\r\n  console.log('In specific doctor for returning names');\r\n  try {\r\n    const response =  axios\r\n      .get(\"returnall/specificdoctor\", {\r\n        params: {\r\n          Specialization: specialization\r\n        }\r\n      });\r\n   // console.log('all docotrs ', response);\r\n    return response;\r\n  }\r\n  catch (err) {\r\n    console.log(err);\r\n    alert(err);\r\n  }\r\n  // console.log(response);\r\n };\r\n\r\n export const returnallspecificdoctordetails = async(id)  => {\r\n  console.log('In specific doctor for returning names');\r\n  try {\r\n    const response =  axios\r\n      .get(\"returnall/specificdoctordetails\", {\r\n        params: {\r\n          ID: id\r\n        }\r\n      });\r\n    console.log('Doctor details ', response);\r\n    return response;\r\n  }\r\n  catch (err) {\r\n    console.log(err);\r\n    alert(err);\r\n  }\r\n  // console.log(response);\r\n };\r\n export const patientbookingdetails = async(id)  => {\r\n  //console.log('In specific doctor for returning names');\r\n  try {\r\n    const response =  axios\r\n      .get(\"returnall/patientbookings\", {\r\n        params: {\r\n          ID: id\r\n        }\r\n      });\r\n    //console.log('Doctor details ', response);\r\n    return response;\r\n  }\r\n  catch (err) {\r\n    console.log(err);\r\n    alert(err);\r\n  }\r\n  // console.log(response);\r\n };\r\n export const doctorappointments = async(id)  => {\r\n  //console.log('In specific doctor for returning names');\r\n  try {\r\n    const response =  axios\r\n      .get(\"returnall/doctorappointment\", {\r\n        params: {\r\n          ID: id\r\n        }\r\n      });\r\n    //console.log('Doctor details ', response);\r\n    return response;\r\n  }\r\n  catch (err) {\r\n    console.log(err);\r\n    alert(err);\r\n  }\r\n  // console.log(response);\r\n };\r\n export const patientchecked =  async (id) => {\r\n  console.log('in updatefile userfunction.js', id);\r\n  try {\r\n     const response = await axios\r\n       .post(\"returnall/updatepatientcheck\", {\r\n         \r\n        BookingID: id\r\n         \r\n       });\r\n      return response;\r\n   }\r\n   catch (err) {\r\n     console.log(err);\r\n     alert(err);\r\n   }\r\n };\r\n\r\n\r\nexport const returnallfiles =  async emailid => {\r\n  console.log('in return all file api', emailid);\r\n  try {\r\n    const response = await axios\r\n      .get(\"returnfiles/\", {\r\n        params: {\r\n          Email_id: emailid\r\n        }\r\n      });\r\n    console.log('all files', response);\r\n    return response.data;\r\n  }\r\n  catch (err) {\r\n    console.log(err);\r\n    alert(err);\r\n  }\r\n  // console.log(response);\r\n };\r\n\r\n export const deletefile =  async key => {\r\n  console.log('in delete all file api key', key);\r\n  try {\r\n     const response = await axios\r\n       .get(\"returnfiles/delete\", {\r\n         params: {\r\n           key: key\r\n         }\r\n       });\r\n     console.log('all files', response);\r\n     return response.data;\r\n   }\r\n   catch (err) {\r\n     console.log(err);\r\n     alert(err);\r\n   }\r\n  // console.log(response);\r\n };\r\n\r\n //deletefileinfor from database\r\n export const deletefilefromdatabase =  async id => {\r\n  console.log('in delete all file api', id);\r\n  try {\r\n     const response = await axios\r\n       .delete(\"returnfiles/deletefromdatabase\", {\r\n         params: {\r\n           id: id\r\n         }\r\n       });\r\n     console.log('Deleted from database', response);\r\n     return response;\r\n   }\r\n   catch (err) {\r\n     console.log(err);\r\n     alert(err);\r\n   }\r\n  // console.log(response);\r\n };\r\n\r\n\r\n \r\n\r\n\r\n\r\n\r\n export const returnAdminfiles =  async () => {\r\n  try {\r\n     const response = await axios\r\n       .get(\"returnfiles/admin\");\r\n     console.log('all admin files', response);\r\n     return response;\r\n   }\r\n   catch (err) {\r\n     console.log(err);\r\n     alert(err);\r\n   }\r\n  // console.log(response);\r\n };\r\n\r\n//Casheir\r\n\r\nexport const Cashierreturn = async()  => {\r\n  //console.log('In Spcialization for returning all specialization');\r\n  try {\r\n    const response = await axios\r\n      .get(\"returnall/cashierdata\");\r\n    //console.log('all specialization ', response);\r\n    return response;\r\n  }\r\n  catch (err) {\r\n    console.log(err);\r\n    alert(err);\r\n  }\r\n  // console.log(response);\r\n };\r\n\r\n export const feecollected =  async (id) => {\r\n  //console.log('in updatefile userfunction.js', id);\r\n  try {\r\n     const response = await axios\r\n       .post(\"returnall/updatefeecollected\", {\r\n         \r\n        BookingID: id\r\n         \r\n       });\r\n      return response;\r\n   }\r\n   catch (err) {\r\n     console.log(err);\r\n     alert(err);\r\n   }\r\n };\r\n\r\n \r\n \r\n\r\n ","import React, { Component } from \"react\";\r\nimport Footer from \"./Footer\";\r\nimport logo from \"../Medico.jpg\"\r\nimport { withOktaAuth } from '@okta/okta-react';\r\nimport { jwt_decode } from 'jwt-decode';\r\nimport { returnUserID } from \"./UserFunctions\";\r\nvar jwtDecode = require('jwt-decode');\r\n\r\nconst landingPage = class Landing extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      user : {}\r\n    }\r\n    \r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.authService){\r\n      this.props.authService.getUser().then(res => {\r\n        console.log(res);\r\n        this.setState({\r\n          user: res\r\n        })\r\n      });\r\n    }\r\n    if (this.props.authService){\r\n       this.props.authService.getIdToken().then(res => {\r\n        if (res !== undefined){\r\n          console.log(res);\r\n          let idToken = res\r\n          let decoded = jwtDecode(idToken);\r\n          console.log(decoded);\r\n          //console.log(\"My response emailID\",decoded.email);\r\n          localStorage.setItem(\"userEmail\", decoded.email);\r\n          returnUserID(localStorage.userEmail)\r\n            .then(res => {\r\n              console.log(\"Check USerID\", res.data[0].ID);\r\n              localStorage.setItem(\"ID\",res.data[0].ID);\r\n            })\r\n            .catch(err => {\r\n              alert(err);\r\n            });\r\n          if (decoded[\"isPatient\"] == true){\r\n            console.log(decoded[\"isPatient\"]);\r\n            localStorage.setItem(\"role\", \"Patient\");\r\n          } else if (decoded[\"isDoctor\"] == true){\r\n            console.log(decoded[\"isDoctor\"]);\r\n            localStorage.setItem(\"role\", \"Doctor\");\r\n          }\r\n        }\r\n       \r\n      }) \r\n      //console.log(this.props.authService._authState)\r\n      /* let accessToken = this.props.authState[\"accessToken\"]\r\n      let decoded = jwt_decode(accessToken);\r\n      console.log(decoded); */\r\n    }\r\n\r\n    \r\n   \r\n  }  \r\n  render() {\r\n    const { user } = this.state;\r\n    localStorage.setItem(\"isLogIn\", 'false');\r\n    return (\r\n      <div className=\"\">\r\n        <div className=\"jumbotron color_back mt-4\" style={{marginBottom:'0px !important'}}>\r\n          <div className=\"col-sm-8 mx-auto\">\r\n\r\n      {\r\n        user && <h4 className=\"text-center\">Hello {user.name} , Greetings from </h4>\r\n      }\r\n      \r\n      {\r\n        !user && <h4 className=\"text-center\"> Greetings from </h4>\r\n      }\r\n\r\n            <div>\r\n            <h1 className=\"text-center name_app\">MedicoConnect</h1>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"jumbotron mt-4\" style={{display:'flex'}}>\r\n        <img src={logo} style={{width:'50%',height:'450px',borderRadius:'12%'}}></img>\r\n          <div className=\"col-sm-5 mx-auto\" style={{paddingTop:'4%'}}>\r\n            \r\n            <p>**NOTE: Short Feature List for MedicoConnect Application:</p>\r\n            \r\n            <p className=\"\">1. Patient Login</p>\r\n            <p className=\"\">2. Doctor Login</p>\r\n            <p className=\"\">3. Cashier Login</p>\r\n            <p className=\"\">4. Social login (Facebook)</p>\r\n            <p className=\"\">5. Application performs Booking Appointment.</p>\r\n            <p className=\"\">6. Application performs Accepting Payments.</p>\r\n            <p className=\"\">7. Application performs Uploading/Deleting patient reports.</p>\r\n            <p className=\"\">8. Application performs Patient checked and Viewing report.</p>\r\n            <p className=\"\">9. Sending Appointment booked mails</p>\r\n           \r\n\r\n\r\n\r\n          </div>\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withOktaAuth(landingPage);\r\n","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport OktaSignIn from '@okta/okta-signin-widget';\r\nimport '@okta/okta-signin-widget/dist/css/okta-sign-in.min.css';\r\n\r\nclass SignInWidget extends Component {\r\n  componentDidMount() {\r\n    const el = ReactDOM.findDOMNode(this);\r\n \r\n    this.widget = new OktaSignIn ({\r\n      baseUrl: this.props.baseUrl,\r\n      logo: 'Medico.png',\r\n      \r\n      clientId: '0oaagvaiqddotHkMn4x6', \r\n      authParams: {\r\n        responseType: ['id_token'],\r\n        scope : [\r\n          'openid', 'email', 'profile'\r\n        ],\r\n        redirectUri: 'http://localhost:3000/implicit/callback', \r\n       \r\n      },\r\n      idps : [\r\n        { type: 'FACEBOOK', id: '0oaanlwmpFqJEo92r4x6' },\r\n        { type: 'Google', id: '0oaarsfakSQOExcYk4x6' }\r\n      ],\r\n      idpDisplay : \"SECONDARY\",\r\n      i18n: {\r\n        en: {\r\n          'password.forgot.email.or.username.placeholder': 'Email',\r\n          'password.forgot.email.or.username.tooltip': 'Email',\r\n          'errors.E0000095': 'Unable to reset password.  Did you put in a valid email?'\r\n        }\r\n      }\r\n    });\r\n    this.widget.renderEl({ el }, this.props.onSuccess, this.props.onError);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.widget.remove();\r\n  }\r\n\r\n  render() {\r\n    return <div />;\r\n  }\r\n};\r\nexport default SignInWidget;","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport SignInWidget from './SignInWidget';\r\nimport { withOktaAuth } from '@okta/okta-react';\r\n\r\nexport default withOktaAuth(class Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onSuccess = this.onSuccess.bind(this);\r\n    this.onError = this.onError.bind(this);\r\n    this.state = {\r\n      authenticated: null\r\n    };\r\n    this.checkAuthentication();\r\n  }\r\n\r\n  async checkAuthentication() {\r\n      if(this.props.authState) {\r\n        const authenticated = await this.props.authState.isAuthenticated;\r\n        if (authenticated !== this.state.authenticated) {\r\n          this.setState({ authenticated });\r\n        }    \r\n      }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.checkAuthentication();\r\n  }\r\n\r\n  onSuccess(res) {\r\n      console.log(res);\r\n    if (res.status === 'SUCCESS') {\r\n        this.checkAuthentication();\r\n        localStorage.setItem(\"isLogIn\", true);\r\n        if (res.length > 0 && res[0].idToken) {\r\n          return this.props.authService.redirect({\r\n            sessionToken: res[0].idToken    \r\n        }); \r\n      } else  {\r\n        return this.props.authService.redirect({\r\n          sessionToken: res.session.token\r\n        });\r\n  \r\n\r\n      }\r\n\r\n   } else {\r\n    // The user can be in another authentication state that requires further action.\r\n    // For more information about these states, see:\r\n    //   https://github.com/okta/okta-signin-widget#rendereloptions-success-error\r\n    }\r\n  }\r\n\r\n  onError(err) {\r\n    console.log('error logging in', err);\r\n  }\r\n\r\n  render() {\r\n  \r\n    return this.state.authenticated ?\r\n      <Redirect to={{ pathname: '/' }}/> :\r\n      <SignInWidget\r\n        baseUrl={this.props.baseUrl}\r\n        onSuccess={this.onSuccess}\r\n        onError={this.onError}/>;\r\n  }\r\n});","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { withOktaAuth } from '@okta/okta-react';\r\n\r\nexport default withOktaAuth(class Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.login = this.login.bind(this);\r\n    this.logout = this.logout.bind(this);\r\n  }\r\n\r\n  async login() {\r\n    this.props.authService.login('/');\r\n  }\r\n\r\n  async logout() {\r\n    this.props.authService.logout('/implicit/logout');\r\n  }\r\n\r\n  render() {\r\n    if (this.props.authState.isPending) return null;\r\n\r\n    const button = this.props.authState.isAuthenticated ?\r\n      <button onClick={this.logout}>Logout</button> :\r\n      <button onClick={this.login}>Login</button>;\r\n\r\n    return (\r\n      <div>\r\n          Login Status: {this.props.authState.isAuthenticated}\r\n        <Link to='/'>Home</Link><br/>\r\n        <Link to='/protected'>Protected</Link><br/>\r\n        {button}\r\n      </div>\r\n    );\r\n  }\r\n});","import React, { Component } from 'react';\r\nimport { insertdoctorprofile,fetchdoctorprofile } from \"./UserFunctions\";\r\n\r\nclass DoctorRegister extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            Degree: \"\",\r\n            Specialization: \"\",\r\n            YearOfExperience: \"\",\r\n            Address: \"\",\r\n            Contact: \"\",\r\n            Fee:\"\",\r\n            Gender:\"\",\r\n            errors: {}\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n      }\r\n\r\n      componentDidMount() {\r\n        fetchdoctorprofile(localStorage.ID)\r\n          .then(res => {\r\n            console.log(\"check \", res.data);\r\n            this.setState({\r\n              Degree: res.data[0].Degree,\r\n              Specialization: res.data[0].Specialization,\r\n              YearOfExperience: res.data[0].YearOfExperience,\r\n              Address: res.data[0].Address,\r\n              Contact: res.data[0].Contact,\r\n              Fee: res.data[0].Fee,\r\n              Gender: res.data[0].Gender\r\n            });\r\n          })\r\n          .catch(err => {\r\n            alert(err);\r\n          });\r\n      }\r\n\r\n      onChange(e) {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n      }\r\n      onSubmit(e) {\r\n        e.preventDefault();\r\n    \r\n        const docProfile = {\r\n          DrID:localStorage.ID,\r\n          Degree: this.state.Degree,\r\n          Specialization: this.state.Specialization,\r\n          YearOfExperience: this.state.YearOfExperience,\r\n          Address: this.state.Address,\r\n          Contact: this.state.Contact,\r\n          Fee: this.state.Fee,\r\n          Gender: this.state.Gender\r\n        };\r\n        console.log(\"Doctor info \",docProfile);\r\n        insertdoctorprofile(docProfile)\r\n        .then(res =>{\r\n          \r\n          if(res.status==200){\r\n              alert(\"Profile Inserted Successfully\");\r\n              this.props.history.push(`/`);\r\n          }\r\n          else{\r\n            alert(\"Profile didnotinserted\");\r\n          }\r\n        });\r\n      }\r\n    render() {\r\n        return (\r\n        <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6 mt-5 mx-auto\" style={{textAlign:'left'}}>\r\n            <form noValidate onSubmit={this.onSubmit}>\r\n              <h1 className=\"h3 mb-3 font-weight-normal\">Please fill the form to complete your profile</h1>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"Degree\">Degree</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"Degree\"\r\n                  placeholder=\"Enter your Degree\"\r\n                  value={this.state.Degree}\r\n                  onChange={this.onChange}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"Specialization\">Specialization</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"Specialization\"\r\n                  placeholder=\"Enter your Specialization\"\r\n                  value={this.state.Specialization}\r\n                  onChange={this.onChange}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"YearOfExperience\">Experience</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"YearOfExperience\"\r\n                  placeholder=\"Enter total year of Experience\"\r\n                  value={this.state.YearOfExperience}\r\n                  onChange={this.onChange}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"Address\">Address</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"Address\"\r\n                  placeholder=\"Enter clinic Address\"\r\n                  value={this.state.Address}\r\n                  onChange={this.onChange}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"Contact\">Contact</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"Contact\"\r\n                  placeholder=\"Enter Contact number\"\r\n                  value={this.state.Contact}\r\n                  onChange={this.onChange}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"Fee\">Fee</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"Fee\"\r\n                  placeholder=\"Enter consultancy charge\"\r\n                  value={this.state.Fee}\r\n                  onChange={this.onChange}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n              <label htmlFor=\"Gender\">Gender</label>\r\n                    <select className=\"form-control\" name=\"Gender\" value={this.state.value} onChange={this.onChange}>\r\n                        <option value=\"default\" defaultValue>Select</option>  \r\n                        <option value=\"F\">Female</option>\r\n                        <option value=\"M\">Male</option>\r\n                    </select>\r\n                </div>\r\n              <button\r\n                type=\"submit\"\r\n                className=\"btn btn-lg btn-primary btn-block\">\r\n                Upload Profile!\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n        \r\n        )\r\n    }\r\n}\r\n\r\nexport default DoctorRegister;","import React, { Component } from \"react\";\r\nimport { register } from \"./UserFunctions\";\r\n\r\nclass Register extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      first_name: \"\",\r\n      last_name: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      role:\"\",\r\n      errors: {}\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n  onInputChange = event => {\r\n    console.log(event.target.value);\r\n    this.setState({\r\n      role: event.target.value\r\n    });\r\n    console.log(this.state.role);\r\n  }\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const newUser = {\r\n      first_name: this.state.first_name,\r\n      last_name: this.state.last_name,\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n      role: this.state.role\r\n    };\r\n    console.log(\"user info \",newUser);\r\n    register(newUser).then(res => {\r\n      alert(\"Please Login with this ID \"+ res);\r\n      this.props.history.push(`/login`);\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6 mt-5 mx-auto\" style={{textAlign:'left'}}>\r\n            <form noValidate onSubmit={this.onSubmit}>\r\n              <h1 className=\"h3 mb-3 font-weight-normal\">Register</h1>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"name\">First name</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"first_name\"\r\n                  placeholder=\"Enter your first name\"\r\n                  value={this.state.first_name}\r\n                  onChange={this.onChange}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"name\">Last name</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"last_name\"\r\n                  placeholder=\"Enter your lastname name\"\r\n                  value={this.state.last_name}\r\n                  onChange={this.onChange}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"email\">Email address</label>\r\n                <input\r\n                  type=\"email\"\r\n                  className=\"form-control\"\r\n                  name=\"email\"\r\n                  placeholder=\"Enter email\"\r\n                  value={this.state.email}\r\n                  onChange={this.onChange}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"password\">Password</label>\r\n                <input\r\n                  type=\"password\"\r\n                  className=\"form-control\"\r\n                  name=\"password\"\r\n                  placeholder=\"Password\"\r\n                  value={this.state.password}\r\n                  onChange={this.onChange}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n              <label htmlFor=\"roles\">Select Role</label>\r\n                    <select className=\"form-control\" id=\"profile\" value={this.state.value} onChange={this.onInputChange} \r\n                         placeholder=\"Enter usertype\">\r\n                        <option value=\"default\" defaultValue>Select</option>  \r\n                        <option value=\"Doctor\">Doctor</option>\r\n                        <option value=\"Patient\">Patient</option>\r\n                        <option value=\"Cashier\">Cashier</option>\r\n                    </select>\r\n                </div>\r\n              <button\r\n                type=\"submit\"\r\n                className=\"btn btn-lg btn-primary btn-block\"\r\n              >\r\n                Register!\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Register;\r\n","import React, { Component } from 'react'\r\nimport { Cashierreturn } from \"./UserFunctions\";\r\nimport { feecollected } from \"./UserFunctions\";\r\nimport \"./sh.css\"\r\nexport default class Cashier extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            cashierdata:[]\r\n\r\n        };\r\n      }\r\n\r\n      componentDidMount() {\r\n        \r\n        Cashierreturn()\r\n          .then(res => {\r\n            //console.log(\"all cards \", res.data);\r\n            this.setState({\r\n              cashierdata: res.data\r\n            });\r\n          })\r\n          .catch(err => {\r\n            alert(err);\r\n          });\r\n      }\r\n\r\n\r\n      onclick=(event)=>{\r\n        feecollected(event.target.id)\r\n        .then(res => {\r\n            console.log(\"Pateint checked \", res);\r\n            alert(\"Fees collected\");\r\n           window.location.reload();\r\n          })\r\n          .catch(err => {\r\n            alert(err);\r\n          });\r\n    }\r\n    render() {\r\n        return (\r\n        <div className=\"container\" >\r\n        <div>\r\n        {this.state.cashierdata.map(response => (\r\n        <div\r\n                  class=\"card5 col-md-3\"\r\n                  style={{\r\n                    marginTop:'2%',marginBottom:'2%',\r\n                    border: \"1px solid brown\",\r\n                    boxShadow: \"1px 1px 10px 2px\",\r\n                    marginRight:'3%',\r\n                    marginBottom:'3%'\r\n                  }}\r\n                >     \r\n                  <ul class=\"list-group list-group-flush\">\r\n                  <li class=\"list-group-item\">\r\n                      Booking ID : {response.BookingID}\r\n                    </li>\r\n                    <li class=\"list-group-item\">\r\n                      Patient Name : {response.PatientName}\r\n                    </li>\r\n                    <li class=\"list-group-item\">\r\n                      Doctor Name : {response.DoctorName}\r\n                    </li>\r\n                    <li class=\"list-group-item\">Appointment Date :{response.AppointmentDate}</li>\r\n                    <li class=\"list-group-item\">Appointment Time :{response.AppointmentTime}</li>\r\n                    <li class=\"list-group-item\">\r\n                    Fee : {response.Fee}\r\n                    </li>\r\n                    <li class=\"list-group-item\">\r\n                    <button class=\"btn btn-primary\" id={response.BookingID} onClick={this.onclick}>Fees Collected!!</button>        \r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n        ))}\r\n        </div>\r\n      </div>\r\n            \r\n        )\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { returnallspecialization, sendmail } from \"./UserFunctions\";\r\nimport { returnallspecificdoctor } from \"./UserFunctions\";\r\nimport { returnallspecificdoctordetails } from \"./UserFunctions\";\r\nimport { insertappointmentinfo } from \"./UserFunctions\";\r\n//import { sendmail } from \"./UserFunctions\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nclass Patient extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      specialization: [],\r\n      specialization_selected: \"\",\r\n      doctor_name: [],\r\n      doctor_details:[],\r\n      doctor_id_selected: \"\",\r\n      startDate: new Date(),\r\n      time:\"\",\r\n      consent:\"\",\r\n      PatientID:\"\",\r\n      doctor_name_selected:\"\"\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    returnallspecialization()\r\n      .then(res => {\r\n        console.log(\"check \", res.data);\r\n        this.setState({\r\n          specialization: res.data\r\n        });\r\n      })\r\n      .catch(err => {\r\n        alert(err);\r\n      });\r\n  }\r\n  onInputChangeconsent = event =>{\r\n    this.setState({\r\n      consent: event.target.value\r\n    });\r\n  };\r\n  onInputChange = event => {\r\n    this.setState({\r\n      specialization_selected: event.target.value\r\n    });\r\n    \r\n      returnallspecificdoctor(event.target.value)\r\n        .then(res => {\r\n          console.log(\"check \", res.data);\r\n          this.setState({\r\n            doctor_name: res.data\r\n          });\r\n        })\r\n        .catch(err => {\r\n          alert(err);\r\n        });\r\n    };\r\n    handleChange = date => {\r\n      this.setState({\r\n        startDate: date\r\n      });\r\n    };\r\n    onInputChangeDoctorName = event => {\r\n     \r\n      this.setState({\r\n        doctor_id_selected: event.target.value,\r\n        doctor_name_selected:event.target.options[event.target.selectedIndex].text\r\n      });\r\n      \r\n        returnallspecificdoctordetails(event.target.value)\r\n          .then(res => {\r\n            //console.log(\"check \", res.data[0]);\r\n            this.setState({\r\n              doctor_details: res.data[0]\r\n            });\r\n          })\r\n          .catch(err => {\r\n            alert(err);\r\n          });\r\n      };\r\n  onChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    let appointmentdetails = {\r\n      PatientID:localStorage.ID,\r\n      DoctorID:this.state.doctor_id_selected,\r\n      date: this.state.startDate.toDateString(),\r\n      time:this.state.time, \r\n      consent:this.state.consent\r\n    };\r\n    let emaildetails = {\r\n      DoctorEmail:this.state.doctor_details.Email,\r\n      PatientEmail:localStorage.email,\r\n      DoctorName:this.state.doctor_name_selected,\r\n      date: this.state.startDate.toDateString(),\r\n      time:this.state.time\r\n    };\r\n    \r\n    insertappointmentinfo(appointmentdetails)\r\n    .then(res =>{\r\n      \r\n      if(res.status==200){\r\n          alert(\"Appointment Booked\");\r\n          console.log(\"Apoointment mail details\",emaildetails);\r\n          sendmail(emaildetails)\r\n          .then(res =>{\r\n            this.props.history.push(`/patientbooking`);\r\n          })\r\n          .catch(err =>{\r\n            alert(err);\r\n          });\r\n         \r\n      }\r\n      else{\r\n        alert(\"Appointment Server Down\");\r\n      }\r\n    });\r\n    \r\n    console.log(\"user info \", appointmentdetails);\r\n    //register(newUser).then(res => {\r\n    //alert(\"Please Login with this ID \"+ res);\r\n    //  this.props.history.push(`/login`);\r\n    // });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-7 mt-5 mb-5 mx-auto\" style={{ textAlign: \"left\" }}>\r\n            <form noValidate onSubmit={this.onSubmit}>\r\n              <h1 className=\"h3 mb-3 font-weight-normal\">\r\n                Make an appointment of Doctor\r\n              </h1>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"doctorspecialization\">\r\n                  Doctor Specialization\r\n                </label>\r\n                <select\r\n                  className=\"form-control\"\r\n                  id=\"Specializationz\"\r\n                  value={this.state.value}\r\n                  onChange={this.onInputChange}\r\n                  placeholder=\"Select Specialzation\"\r\n                >\r\n                  <option value=\"default\" defaultValue>\r\n                    Select an Option\r\n                  </option>\r\n                  {this.state.specialization.map(response => (\r\n                    <option\r\n                      key={response.Specialization}\r\n                      value={response.Specialization}\r\n                    >\r\n                      {response.Specialization}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"doctorname\">Doctor Name</label>\r\n                <select\r\n                  className=\"form-control\"\r\n                  onChange={this.onInputChangeDoctorName}  \r\n                >\r\n                  <option value=\"default\" defaultValue>\r\n                    Select an Option\r\n                  </option>\r\n                  {this.state.doctor_name.map(response => (\r\n                    <option id={response.Name}\r\n                      name={response.Name}\r\n                      key={response.ID}\r\n                      value={response.ID}\r\n                    >\r\n                      {response.Name}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n              <h3>Complete Doctor Profile</h3>\r\n              <div className=\"form-group\" style={{ border: \"1px solid brown\",padding:\"2%\" }}>\r\n                <div><h6 htmlFor=\"\">Doctor Email :{this.state.doctor_details.Email}</h6></div>\r\n                <div><h6 htmlFor=\"\">Degree :{this.state.doctor_details.Degree}</h6></div>\r\n                <div><h6 htmlFor=\"\">Year of Experience :{this.state.doctor_details.YearOfExperience}</h6></div>\r\n                <div><h6 htmlFor=\"\">Address :{this.state.doctor_details.Address}</h6></div>\r\n                <div><h6 htmlFor=\"\">Contact :{this.state.doctor_details.Contact}</h6></div>\r\n                <div><h6 htmlFor=\"\">Fee :{this.state.doctor_details.Fee}</h6></div>\r\n                <div><h6 htmlFor=\"\">Visiting Hours :{this.state.doctor_details.VisitingHours}</h6></div>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"date\">Select Date :</label>\r\n                  <DatePicker className=\"form-control\" selected={this.state.startDate} onChange={this.handleChange}/>  \r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"date\">Enter Time :</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"time\"\r\n                  placeholder=\"Enter time\"\r\n                  value={this.state.time}\r\n                  onChange={this.onChange}\r\n                /> \r\n              </div>\r\n              \r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"roles\">Consent to allow Doctor to Access Medical History</label>\r\n                <select\r\n                  className=\"form-control\"\r\n                  id=\"access\"\r\n                  value={this.state.value}\r\n                  onChange={this.onInputChangeconsent}\r\n                  placeholder=\"Enter usertype\"\r\n                >\r\n                  <option value=\"default\" defaultValue>\r\n                    Select Consent\r\n                  </option>\r\n                   <option value=\"No\">\r\n                    No\r\n                  </option>\r\n                  \r\n                  <option value=\"Yes\">Yes</option>\r\n                </select>\r\n              </div>\r\n              <button\r\n                type=\"submit\"\r\n                className=\"btn btn-lg btn-primary btn-block\"\r\n              >\r\n                Make an Appointment!\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Patient;\r\n","import React, { Component } from \"react\";\r\nimport { patientbookingdetails } from \"./UserFunctions\";\r\nimport \"./sh.css\"\r\nclass PatientBooking extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      bookingdetails: []\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    let id = localStorage.ID;\r\n    patientbookingdetails(id)\r\n      .then(res => {\r\n        console.log(\"all cards \", res.data);\r\n        this.setState({\r\n          bookingdetails: res.data\r\n        });\r\n      })\r\n      .catch(err => {\r\n        alert(err);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Here are your Booking Details</h1>\r\n        <div class=\"\">\r\n        \r\n          {this.state.bookingdetails.map(response => (\r\n           \r\n           <div\r\n              class=\"card1 col-md-3\"\r\n              style={{\r\n                \r\n                border: \"1px solid brown\",\r\n                boxShadow: \"1px 1px 10px 2px\",\r\n                marginRight:'3%',\r\n                marginBottom:'3%'\r\n              }}\r\n            >\r\n              <div class=\"card-body\">\r\n                <h5 class=\"card-title\">{response.Specialization}</h5>\r\n              </div>\r\n              <ul class=\"list-group list-group-flush\">\r\n                <li class=\"list-group-item\">\r\n                  Doctor Name : {response.DoctorName}\r\n                </li>\r\n                <li class=\"list-group-item\">Address :{response.Address}</li>\r\n                <li class=\"list-group-item\">Contact :{response.Contact}</li>\r\n                <li class=\"list-group-item\">\r\n                  Doctor Gender :{response.Gender}\r\n                </li>\r\n                <li class=\"list-group-item\">\r\n                  Year of Experience :{response.YearOfExperience}\r\n                </li>\r\n                <li class=\"list-group-item\">\r\n                  Appointment Date :{response.AppointmentDate}\r\n                </li>\r\n                <li class=\"list-group-item\">Fee :{response.Fee}</li>\r\n                <li class=\"list-group-item\">Concent :{response.Concent}</li>\r\n              </ul>\r\n            </div>\r\n            \r\n          ))}\r\n          \r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PatientBooking;\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nclass Doctorviewreports extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            data:this.props.location.data,\r\n            response:[]\r\n         }\r\n    }\r\n    async componentDidMount() { \r\n        axios.get('medicalhistory/',\r\n        {\r\n          params:{\r\n           PatientID: this.state.data\r\n          }\r\n        }).then(response => {\r\n          console.log(response);\r\n        \r\n          if (response) {\r\n            \r\n            this.setState({\r\n                response: response.data\r\n              \r\n            });\r\n          }\r\n        });\r\n      }\r\n\r\n    render() { \r\n       \r\n        return ( \r\n            <div className=\"col-md-12\">\r\n          {this.state.response.map(response => (\r\n            <div  className=\"display_p\" key={response.PatientID}>\r\n              <div className=\"col-md-2\">\r\n                <b>{response.Filename}</b>\r\n              </div>\r\n              <div>\r\n                  <img src={response.Filedownloadlink} alt=\"Uploaded images\" height=\"800\" width=\"800\"/>\r\n                </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Doctorviewreports;","import React, { Component } from 'react'\r\nimport { doctorappointments } from \"./UserFunctions\";\r\nimport { patientchecked } from \"./UserFunctions\";\r\nimport Doctorviewreports from \"./doctorviewreports\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nclass DoctorAppointment extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            doctorappointment:[],\r\n            data:'bro'\r\n         };\r\n    }\r\n\r\n    componentDidMount() {\r\n        let id = localStorage.ID;\r\n        doctorappointments(id)\r\n          .then(res => {\r\n            console.log(\"all cards \", res.data);\r\n            this.setState({\r\n                doctorappointment: res.data\r\n            });\r\n          })\r\n          .catch(err => {\r\n            alert(err);\r\n          });\r\n      }\r\n    onclick=(event)=>{\r\n        //console.log(event.target.id);\r\n        patientchecked(event.target.id)\r\n        .then(res => {\r\n            console.log(\"Pateint checked \", res);\r\n           window.location.reload();\r\n          })\r\n          .catch(err => {\r\n            alert(err);\r\n          });\r\n    }\r\n  \r\n    render() { \r\n      \r\n        return ( \r\n            <div>\r\n              <div style={{marginTop:'2%',marginBottom:'2%'}}>\r\n            <h1>Here are your Upcoming Apointments</h1>\r\n            </div>\r\n            <div class=\"\">\r\n            \r\n              {this.state.doctorappointment.map(response => (\r\n               \r\n               <div\r\n                  class=\"card col-md-3\"\r\n                  style={{\r\n                    \r\n                    border: \"1px solid brown\",\r\n                    boxShadow: \"1px 1px 10px 2px\",\r\n                    marginRight:'3%',\r\n                    marginBottom:'3%'\r\n                  }}\r\n                >\r\n                  \r\n                  <ul class=\"list-group list-group-flush\">\r\n                    <li class=\"list-group-item\">\r\n                      Patient Name : {response.PatientName}\r\n                    </li>\r\n                    <li class=\"list-group-item\">Appointment Date :{response.AppointmentDate}</li>\r\n                    <li class=\"list-group-item\">Appointment Time :{response.AppointmentTime}</li>\r\n                    <li class=\"list-group-item\">\r\n                    Fee :{response.Fee}\r\n                    </li>\r\n                    <li class=\"list-group-item\">\r\n                    Patient Examined :{response.PatientChecked}\r\n                    </li>\r\n                    <li class=\"list-group-item\">\r\n                    <button class=\"btn btn-primary\" id={response.BookingID} onClick={this.onclick}>Patient Examination Done!!</button>        \r\n                    </li>\r\n                    <li id={response.PatientID} class=\"list-group-item\">\r\n                    \r\n                    {\r\n                      (response.Concent==\"Yes\")?\r\n                      <Link to={{pathname:\"/doctorreportview\",data:response.PatientID}} class=\"btn btn-primary\">\r\n                       Reports\r\n                    </Link>\r\n                    :\"\"\r\n                    }\r\n                    </li>\r\n                  </ul>\r\n                  \r\n                 \r\n                </div>\r\n                \r\n              ))}\r\n             \r\n            </div>\r\n          </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default DoctorAppointment;","\r\nimport React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport S3 from 'react-s3';\r\nimport AWSConfigObj from './Configuration/awsConfig.json';\r\n\r\n\r\nconst configuration = {\r\n  bucketName:  AWSConfigObj.config.bucketName,\r\n  region: AWSConfigObj.config.region,\r\n  accessKeyId: AWSConfigObj.config.accessKeyId,\r\n  secretAccessKey: AWSConfigObj.config.secretAccessKey\r\n}\r\nclass UploadMedicalHistory extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          selectedFile: null,\r\n          PatientID: \"\",\r\n          Filename: \"\",\r\n          Filedownloadlink: \"\",\r\n          response:[]\r\n        }\r\n      }\r\n\r\n      async componentDidMount() { \r\n        axios.get('medicalhistory/',\r\n        {\r\n          params:{\r\n           PatientID: localStorage.ID\r\n          }\r\n        }).then(response => {\r\n          console.log(response);\r\n        \r\n          if (response) {\r\n            \r\n            this.setState({\r\n                response: response.data\r\n              \r\n            });\r\n          }\r\n        });\r\n      }\r\n\r\n      onChangeHandler= async event =>{\r\n          this.setState({\r\n          selectedFile: event.target.files[0]\r\n        })\r\n        console.log(event.target.files[0]);\r\n      }\r\n\r\n      onClickHandler = async event =>  {\r\n        event.preventDefault();\r\n        try{\r\n          S3.uploadFile(this.state.selectedFile, configuration)\r\n          .then((data)=>{\r\n            console.log(data);\r\n            this.setState({\r\n              PatientID: localStorage.ID,\r\n              Filename: data.key,\r\n              Filedownloadlink: data.location\r\n            })\r\n           \r\n            axios.post('https://8biu0dszh6.execute-api.us-east-2.amazonaws.com/prod/uploadfileinfo',this.state)\r\n            .then(res=>{\r\n              if(res){\r\n                alert('File uploaded successfully');\r\n                window.location.reload();\r\n              }\r\n            });\r\n          })\r\n        }catch(error){\r\n          console.log(error.message);\r\n          alert(error);\r\n        }\r\n    }\r\n\r\n    onClickHandlerDelete = async event =>  {\r\n      event.preventDefault();\r\n      try{\r\n        console.log(event.target.id);\r\n        let filename = event.target.id;\r\n        axios.get('/medicalhistory/deletefilemedico',\r\n        {\r\n          params:{\r\n           PatientID: localStorage.ID,\r\n           Filename:filename\r\n          }\r\n        }).then(response => {\r\n          alert('File deleted successfully');\r\n          window.location.reload();\r\n        });\r\n      }catch(error){\r\n        console.log(error.message);\r\n        alert(error);\r\n      }\r\n  }\r\n\r\n\r\n    \r\n    render() {\r\n        return (\r\n        <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-8 mt-5 mx-auto\" style={{textAlign:'left'}}>\r\n          <h1 className=\"h3 mb-3 font-weight-normal\">Please upload your medical history in .png/.jpg format</h1> \r\n          </div>\r\n          <div className=\"col-md-4.5 mt-4 mx-auto\" style={{textAlign:'left'}}>\r\n            <form noValidate onSubmit={this.onSubmit}>\r\n              <label>Upload your file</label><br />\r\n                <input type=\"file\" name=\"file\"\r\n                className=\"btn btn-lg btn-primary btn-block\" onChange={this.onChangeHandler}/>\r\n                <button type=\"submit\"\r\n                className=\"btn btn-lg btn-primary btn-block\" onClick={this.onClickHandler}>Upload File</button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"col-md-12\">\r\n          {this.state.response.map(response => (\r\n            <div  className=\"display_p\" key={response.PatientID}>\r\n              <div className=\"col-md-2\">\r\n                <b>{response.Filename}</b>\r\n              </div>\r\n             \r\n              <div className=\"col-md-2\">\r\n                <a id={response.Filename}\r\n                  className=\"btn btn-danger color_text\"\r\n                  onClick={this.onClickHandlerDelete}>\r\n                  Delete\r\n                </a>\r\n              </div>\r\n              <div>\r\n                  <img src={response.Filedownloadlink} alt=\"Uploaded images\" height=\"800\" width=\"800\"/>\r\n                </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        \r\n      </div>\r\n        \r\n        )\r\n    }\r\n}\r\n\r\nexport default UploadMedicalHistory;","import React, { Component } from \"react\";\r\nimport { ChatBot,AmplifyTheme } from \"aws-amplify-react\";\r\nclass Chatbbot extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    const myTheme = {\r\n      ...AmplifyTheme,\r\n      sectionHeader: {\r\n        ...AmplifyTheme.sectionHeader,\r\n        backgroundColor: '#455a64'\r\n      }\r\n    };\r\n    let handleComplete = (err, confirmation) => {\r\n      if (err) {\r\n        alert(\"Bot conversation failed\");\r\n        return;\r\n      }\r\n      alert(\"Welcome to ChatBot\");\r\n      \r\n    };\r\n    return (\r\n      <div style={{margin:'5%'}}>\r\n        <div style={{margin:'5%'}}>\r\n        <ChatBot\r\n          title=\"LatestAppointment\"\r\n          theme={myTheme}\r\n          botName=\"ScheduleAppointment\"\r\n          welcomeMessage=\"Welcome to Automated chatbot\"\r\n          onComplete={handleComplete()}\r\n          voiceEnabled={true}\r\n          clearOnComplete={true}\r\n        />\r\n      </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Chatbbot;","import React, { Component } from \"react\";\r\nimport { Router, Route } from \"react-router-dom\";\r\nimport './App.css';\r\nimport { Security, SecureRoute, ImplicitCallback, LoginCallback} from '@okta/okta-react';\r\n\r\nimport Navbar from \"./components/Navbar\";\r\nimport Landing from \"./components/Landing\";\r\n/* import Login from \"./components/Login\"; */\r\nimport Login from \"./components/auth/Login\"\r\nimport Home from \"./components/Home\"\r\nimport Register from \"./components/Register\";\r\nimport DoctorRegister from \"./components/DoctorRegister\";\r\nimport Cashier from \"./components/Cashier\";\r\nimport Patient from \"./components/Patient\";\r\nimport PatientBooking from \"./components/PatientBookings\";\r\nimport DoctorAppointment from \"./components/DoctorAppointments\";\r\nimport UploadPatientHistory from \"./components/UploadMedicalHistory\";\r\nimport Doctorviewreports from \"./components/doctorviewreports\";\r\nimport Chatbbot from \"./components/Chatbbot\";\r\nimport Footer from \"./components/Footer\";\r\n\r\nexport const history=require('history').createBrowserHistory()\r\n\r\n\r\nclass App extends Component {\r\n\r\n   constructor(props) {\r\n     super(props);\r\n     this.onAuthRequired = this.onAuthRequired.bind(this);\r\n   }\r\n   \r\n   onAuthRequired() {\r\n    history.push('/login');\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div>\r\n        \r\n        <Router history={history}>\r\n\r\n          <Security issuer='https://dev-797267.okta.com/oauth2/default'\r\n            clientId='0oaagvaiqddotHkMn4x6'\r\n            redirectUri={window.location.origin + '/implicit/callback'}\r\n            onAuthRequired={this.onAuthRequired}\r\n            pkce={true} >\r\n            <div className=\"App\">\r\n            <Navbar />\r\n            <Route exact path=\"/\" component={Landing} /> \r\n              <div className=\"container\">\r\n             \r\n               \r\n                {/*   <Route exact path=\"/login\" component={Login} /> */}\r\n              {/*  <SecureRoute exact path=\"/\" component={Home} />  */}\r\n            \r\n                <Route path='/login' render={() => <Login baseUrl='https://dev-797267.okta.com' />} />\r\n                <Route path='/implicit/callback' component={LoginCallback} />\r\n                <Route exact path=\"/doctorregister\" component={DoctorRegister} />\r\n                {/*  <Route exact path=\"/register\" component={Register} /> */}\r\n                <Route exact path=\"/cashier\" component={Cashier} />\r\n                <Route exact path=\"/patient\" component={Patient} />\r\n                <Route exact path=\"/patientbooking\" component={PatientBooking} />\r\n                <Route exact path=\"/doctorappointments\" component={DoctorAppointment} />\r\n                <Route exact path=\"/medicalhistory\" component={UploadPatientHistory} />\r\n                <Route exact path=\"/doctorreportview\" component={Doctorviewreports} /> \r\n                <Route exact path=\"/ChatBot\" component={Chatbbot} />\r\n              </div>\r\n            </div>\r\n          </Security>\r\n        </Router>\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","// WARNING: DO NOT EDIT. This file is Auto-Generated by AWS Mobile Hub. It will be overwritten.\n\n// Copyright 2017-2018 Amazon.com, Inc. or its affiliates (Amazon). All Rights Reserved.\n// Code generated by AWS Mobile Hub. Amazon gives unlimited permission to\n// copy, distribute and modify it.\n\n// AWS Mobile Hub Project Constants\nconst awsmobile = {\n    'aws_app_analytics': 'enable',\n    'aws_bots': 'enable',\n    'aws_bots_config': [{\"name\":\"ScheduleAppointment\",\"alias\":\"$LATEST\",\"description\":\"\",\"bot-template\":\"bot-import\",\"commands-help\":[],\"region\":\"us-west-2\"}],\n    'aws_cognito_identity_pool_id': 'us-west-2:0e7c96df-5d49-4a49-99d3-dbbb06f25829',\n    'aws_cognito_region': 'us-west-2',\n    'aws_content_delivery': 'enable',\n    'aws_content_delivery_bucket': 'client-hosting-mobilehub-1089888358',\n    'aws_content_delivery_bucket_region': 'us-west-2',\n    'aws_content_delivery_cloudfront': 'enable',\n    'aws_content_delivery_cloudfront_domain': 'd31gtkr526050z.cloudfront.net',\n    'aws_mobile_analytics_app_id': 'f0b09a61cffd4e77a249bf265e7b2e4b',\n    'aws_mobile_analytics_app_region': 'us-east-1',\n    'aws_project_id': '20900456-cee1-40f2-a9d5-86a8f63012d0',\n    'aws_project_name': 'client-2020-05-03-18-16-19',\n    'aws_project_region': 'us-west-2',\n    'aws_resource_name_prefix': 'client-mobilehub-1089888358',\n    'aws_sign_in_enabled': 'enable',\n    'aws_user_pools': 'enable',\n    'aws_user_pools_id': 'us-west-2_B4iXIcHh4',\n    'aws_user_pools_mfa_type': 'ON',\n    'aws_user_pools_web_client_id': '6i4j508rft36bo272gsrfsmfls',\n}\n\nexport default awsmobile;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport config from './aws-exports'; // new\r\nimport Amplify from 'aws-amplify'; // new\r\nAmplify.configure(config);\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}